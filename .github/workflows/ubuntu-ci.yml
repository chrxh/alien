name: CMake

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev libglu-dev
        
    - name: Install CUDA (via NVIDIA's repo)
      run: |
        sudo apt-get update
        sudo apt-get install -y gnupg software-properties-common wget
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
        sudo dpkg -i cuda-keyring_1.1-1_all.deb
        sudo apt-get update
        sudo apt-get install -y cuda-compiler-12-5

    - name: Add CUDA to PATH
      run: |
        echo "/usr/local/cuda/bin" >> $GITHUB_PATH
        echo "LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        
    - name: Bootstrap vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git external/vcpkg
        pushd external/vcpkg
        ./bootstrap-vcpkg.sh -disableMetrics
        popd

    - name: Configure CMake (mit vcpkg Manifest-Mode)
      run: cmake -S . -B build \
        -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
        -DVCPKG_TARGET_TRIPLET=$VCPKG_DEFAULT_TRIPLET \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc

    - name: Build
      run: cmake --build build