name: CMake

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  BUILD_TYPE: Release
  buildDir: ${{ github.workspace }}/build

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
        
    - name: get-cmake
      uses: lukka/get-cmake@v3.21.1
      
    - name: Install Packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev libglu-dev
        
    - uses: Jimver/cuda-toolkit@v0.2.18
      id: cuda-toolkit
      with:
        cuda: '12.5.0'
          
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v6
      with:
          # Just install vcpkg for now, do not install any ports in this step yet.
        setupOnly: true
          # Location of the vcpkg as submodule of the repository.
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: 'f7423ee180c4b7f40d43402c2feb3859161ef625'
          # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
          # compute its hash and append this to the computed cache's key.
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
        vcpkgTriplet: ${{ matrix.triplet }}
          # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed'.
        additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed
        
    - name: 'Run CMake with Ninja, install dependencies with vcpkg, build with CMake'
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtBasic
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        cmakeAppendedArgs: '-GNinja'
        buildDirectory: ${{ env.buildDir }}
